name: Build skaled and run all tests
on:
  workflow_call:
    inputs:
      branch_name:
        type: string
        description: 'Branch name'
        required: true
      sha:
        type: string
        description: 'SHA'
        required: true
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
defaults:
  run:
    shell: bash
jobs:
  testAll:
    runs-on: self-hosted
    env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        NO_ULIMIT_CHECK: 1
        ccache_compress: 'true'
        ccache_compresslevel: 9
    steps:
      - name: Extract repo name
        run: echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch_name }}
      - name: Cache apt packages
        uses: actions/cache@v2
        with:
          path: |
            /var/cache/apt/archives
          key: ${{ runner.os }}-apt-cache
          ttl: 1000000 # purge cache every 1000000 seconds (10 days). This is to pull updated packages
      - name: update apt
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test || true
          sudo apt-get update || true
      - name: install packages
        run: |
          sudo apt-get -y remove libzmq* || true
          sudo apt-get -y install software-properties-common gcc-11 g++-11 || true

      - name: Use g++-11 and gcov-11 by default
        run: |
          echo "Updating all needed alternatives"
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 11
          sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-11 11
          sudo update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-11 11
          sudo update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-11 11
          echo "Checking alternative for gcc"
          which gcc
          gcc --version
          echo "Checking alternative for g++"
          which g++
          g++ --version
          echo "Checking alternative for gcov"
          which gcov
          gcov --version
          echo "Checking alternative for gcov-dump"
          which gcov-dump
          gcov-dump --version
          echo "Checking alternative for gcov-tool"
          which gcov-tool
          gcov-tool --version

      - name: Get newest lcov
        run: |
          # sudo apt-get install libcapture-tiny-perl
          echo "Removing previous lcov version..."
          sudo apt-get remove lcov || true
          echo "Installing newest lcov version..."
          rm -rf newer_lcov || true
          mkdir newer_lcov
          cd newer_lcov
          git clone https://github.com/linux-test-project/lcov --recursive --recurse-submodules
          cd lcov
          git checkout 92e2121
          sudo make install
          cd ..
          cd ..
          echo "Checking installed lcov version..."
          which lcov
          lcov --version

      - name: Submodule update
        run: |
          rm -rf ./libconsensus || true
          ls -1
          git submodule update --init --recursive

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")
      - name: Ccache cache files
        uses: actions/cache@v1.1.0
        with:
          path: .ccache
          key: ${ { matrix.config.name } }-ccache-${ { steps.ccache_cache_timestamp.outputs.timestamp } }
          restore-keys: |
            ${ { matrix.config.name } }-ccache-
      - name: Update gcc-11
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 11
      - name: Configure ccache cache size, zero ccache counters and print ccache stats before start
        run: |
          ccache --max-size=15G
          ccache -z
          ccache --show-stats
      - name: Testeth all verbosity 4
        id: TestCore
        run : |
          ls skaled/mainX.cpp
        continue-on-error: true

      - name: Testeth historic
        id: TestHistoric
        run : |
          ls libhistoric/HistoricStateX.cpp
        continue-on-error: true
      - name: Update PR Status
        uses: actions/github-script@v6
        with:
          script: |
            const state = '${{ steps.testCore.outcome }}' === 'success' ? ('${{ steps.testHistoric.outcome }}' === 'success' ? 'success' : 'failure') : 'failure';
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ inputs.sha }}',
              state,
              context: 'Nightly tests Oleh Test',
              description: state === 'success' ? 'Nightly tests passed' : 'Nightly tests failed',
              target_url: `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`
            });
